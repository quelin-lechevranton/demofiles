# start a line comment, exept if # is follwed by include
#include "file.fcl"



#assignation:
parameter:  value

#a value is either: a number, a block/table, a vector/sequence or a double-quote string
MyInt:      1
MyFloat:    1.0
MyBlock:    { key1: value1 key2: value2 }
MyVector:   [ 1.0, 2e-1, 3 ]
MyString:   "one"

table: { a: 1 b: 2 c: 3 }
x: table.a #x has value: 1 

sequence: [1, 2, 3]
x: sequence[0] #x has value: 1

table.d: 4 #is legal
sequence[3]: 4 #is legal

w: x #w has value x (alpha start string, equivalent to "x" or 'x')
# ???????????
y: @local::x 
v: @table::? 



BlockExample: {
    Name:   "Example"
    Number: 1
}
MyBlock:    @local::BlockExample
#the value of MyBlock.Name is "Example" ?




#global structure:

services: {
    TFileService:   { ??? }
    para1:          value1
    para2:          value2
}

source: 
{
    module_type:    RootInput           #or EmptyEvent for Monte Carlo generation (no inputfile)
    maxEvents:      -1                  #can be specified in command line with: $ lar -c this.fcl -n 10
    fileNames:      [ "path/to/inputfile.root" ]   #can be specified in command line with: $ lar -c this.fcl inputfile.root
}

outputs: {
    ??:             RootOutput          #it is possible to have multiple outputs, somehow
}

physics:
{
    analyzers:      #or producters or filters
    {
        printevt:   #this is the 'service' or 'module instance'
        {
            module_type:    "PrintEventNumber"
            LogLevel:       2
        }
    }
    #two obscure keywords:
    trigger_paths:      ????
    end_paths:          ????
}


#override parameters: 
#block access one by one, last value always prevails
services.para1:     newValue1
physics.analyzers.printevt.module_type: "NewModuleType"

#but: 
physics.analyzers.printevt: { module_type: "NewMooduleType"} #WRONG
#would effectively delete the LogLevel parameter
#and actually is forbidden because it changes the size of the printevt block

#but:
physics.analyzers.printevt.NewParameter: 1.0
#this is valid, it add a paramter and its value to the printevt block
